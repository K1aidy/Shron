// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Searcher.Context;

namespace Searcher.Migrations.Shedule
{
    [DbContext(typeof(SheduleContext))]
    partial class SheduleContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Searcher.Domain.Sheduler.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Parameter")
                        .HasColumnName("payload");

                    b.HasKey("Id")
                        .HasName("03_pk_jobs");

                    b.ToTable("jobs","sheduler");
                });

            modelBuilder.Entity("Searcher.Domain.Sheduler.Shedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Information")
                        .HasColumnName("info");

                    b.Property<bool>("IsBusy")
                        .HasColumnName("is_busy");

                    b.HasKey("Id")
                        .HasName("01_pk_shedules");

                    b.ToTable("shedules","sheduler");
                });

            modelBuilder.Entity("Searcher.Domain.Sheduler.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CronPattern")
                        .HasColumnName("cron");

                    b.Property<int>("ExecutionCount")
                        .HasColumnName("exec_count");

                    b.Property<int>("JobId")
                        .HasColumnName("job_id");

                    b.Property<int>("SheduleId")
                        .HasColumnName("shedule_id");

                    b.HasKey("Id")
                        .HasName("02_pk_tasks");

                    b.HasIndex("JobId");

                    b.HasIndex("SheduleId");

                    b.ToTable("tasks","sheduler");
                });

            modelBuilder.Entity("Searcher.Domain.Sheduler.TaskDependency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChildTaskId");

                    b.Property<int>("TaskId")
                        .HasColumnName("childtask_id");

                    b.HasKey("Id")
                        .HasName("04_pk_task_dependencies");

                    b.HasIndex("ChildTaskId");

                    b.HasIndex("TaskId", "ChildTaskId")
                        .IsUnique();

                    b.ToTable("task_dependencies","sheduler");
                });

            modelBuilder.Entity("Searcher.Domain.Sheduler.TaskStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Description")
                        .HasColumnName("description");

                    b.Property<int>("Ident")
                        .HasColumnName("ident");

                    b.HasKey("Id")
                        .HasName("05_pk_task_statuses");

                    b.HasIndex("Ident")
                        .IsUnique();

                    b.ToTable("task_statuses","sheduler");
                });

            modelBuilder.Entity("Searcher.Domain.Sheduler.Task", b =>
                {
                    b.HasOne("Searcher.Domain.Sheduler.Job", "Job")
                        .WithMany("Tasks")
                        .HasForeignKey("JobId")
                        .HasConstraintName("04_fk_tasks_job")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Searcher.Domain.Sheduler.Shedule", "Shedule")
                        .WithMany("Tasks")
                        .HasForeignKey("SheduleId")
                        .HasConstraintName("03_fk_tasks_shedule")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Searcher.Domain.Sheduler.TaskDependency", b =>
                {
                    b.HasOne("Searcher.Domain.Sheduler.Task", "ChildTask")
                        .WithMany("PrevDependencies")
                        .HasForeignKey("ChildTaskId")
                        .HasConstraintName("01_fk_tasks_deps_prev")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Searcher.Domain.Sheduler.Task", "Task")
                        .WithMany("NextDependencies")
                        .HasForeignKey("TaskId")
                        .HasConstraintName("02_fk_tasks_deps_next")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
